import{_ as s,c as i,o as a,a3 as e}from"./chunks/framework.Dcugq_a2.js";const D=JSON.parse('{"title":"3D数据可视化","description":"","frontmatter":{},"headers":[],"relativePath":"web2/3D/index.md","filePath":"web2/3D/index.md"}'),n={name:"web2/3D/index.md"},l=e(`<h1 id="_3d数据可视化" tabindex="-1">3D数据可视化 <a class="header-anchor" href="#_3d数据可视化" aria-label="Permalink to &quot;3D数据可视化&quot;">​</a></h1><h2 id="three-js" tabindex="-1">Three.js <a class="header-anchor" href="#three-js" aria-label="Permalink to &quot;Three.js&quot;">​</a></h2><p>核心模块：</p><ul><li>Scene <ul><li>创建管理场景</li></ul></li><li>Camera <ul><li>视锥：摄像机的视锥体是一个截头四棱锥形区域，只有在这个区域内的物体才会被渲染到屏幕上，而在这个区域之外的物体则不会被渲染。</li><li>投影方式： <ul><li>透视投影：模拟人眼视角，物体会越远越小</li></ul></li></ul></li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> camera</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> THREE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PerspectiveCamera</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fov, aspect, near, far);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // fov 视角，以垂直方向的度数来表示</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // aspect 视口宽高比，通常为窗口的宽高 window.innerWidth / window.innerHeight</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // near 近截面 离摄像机的最近距离</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // far 远截面 离摄像机的最远距离</span></span></code></pre></div><pre><code>- 正交投影：没有透视效果，物体大小不会随距离变化
</code></pre><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> camera</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> THREE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">OrthographicCamera</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(left, right, top, bottom, near, far);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // left: 视口左边坐标</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // right: 视口右边坐标</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // top: 视口上边坐标</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // bottom: 视口下边坐标</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // near: 近截面 离摄像机的最近距离</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // far：远截面 离摄像机的最远距离</span></span></code></pre></div><ul><li>Renderer</li><li>Mesh</li><li>Geometry</li><li>Material</li><li>Light</li><li>Texture</li><li>Animation</li><li>Controls</li></ul>`,8),t=[l];function h(p,r,k,d,o,c){return a(),i("div",null,t)}const y=s(n,[["render",h]]);export{D as __pageData,y as default};
